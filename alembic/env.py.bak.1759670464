from logging.config import fileConfig
from sqlalchemy import engine_from_config, pool
from alembic import context

# 读取 alembic.ini
config = context.config

# 日志
if config.config_file_name is not None:
    fileConfig(config.config_file_name)

# 只从 app.db.base 导入 Base，避免导入期加载所有模型
from app.db.base import Base  # noqa: E402
target_metadata = Base.metadata

def run_migrations_offline():
    """离线模式：不创建引擎，直接用 URL 生成脚本。"""
    url = config.get_main_option("sqlalchemy.url")
    context.configure(
        url=url,
        target_metadata=target_metadata,
        literal_binds=True,
        compare_type=True,
        compare_server_default=True,
    )
    with context.begin_transaction():
        context.run_migrations()

def run_migrations_online():
    """在线模式：创建引擎，连接后运行迁移。"""
    connectable = engine_from_config(
        config.get_section(config.config_ini_section),
        prefix="sqlalchemy.",
        poolclass=pool.NullPool,
    )
    with connectable.connect() as connection:
        context.configure(
            connection=connection,
            target_metadata=target_metadata,
            compare_type=True,
            compare_server_default=True,
        )
        with context.begin_transaction():
            context.run_migrations()

if context.is_offline_mode():
    run_migrations_offline()
else:
    run_migrations_online()
