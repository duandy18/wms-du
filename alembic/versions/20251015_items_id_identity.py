"""ensure items.id is auto-increment (identity/sequence)"""

from alembic import op

revision = "20251015_items_id_identity"
down_revision = "20251015_add_qty_to_batches"  # 保持你当前的父修订
branch_labels = None
depends_on = None


def upgrade() -> None:
    op.execute(
        """
        DO $$
        DECLARE
          has_table    boolean;
          has_identity boolean;
          has_default  boolean;
        BEGIN
          has_table := to_regclass('public.items') IS NOT NULL;

          -- A) 缺表：先创建最小可用 items（id identity），满足 quick/smoke 的依赖
          IF NOT has_table THEN
            CREATE TABLE public.items (
              id           INTEGER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
              sku          VARCHAR(64) NOT NULL UNIQUE,
              name         VARCHAR(128) NOT NULL,
              uom          VARCHAR(8)  NOT NULL DEFAULT 'EA',
              is_active    INTEGER     NOT NULL DEFAULT 1,
              created_at   TIMESTAMPTZ NOT NULL DEFAULT CURRENT_TIMESTAMP,
              updated_at   TIMESTAMPTZ NOT NULL DEFAULT CURRENT_TIMESTAMP
            );
            RETURN;
          END IF;

          -- B) 已有表：若 id 既不是 identity 又没有默认，则补上自增策略
          SELECT EXISTS (
            SELECT 1
            FROM information_schema.columns
            WHERE table_schema='public' AND table_name='items' AND column_name='id'
              AND is_identity = 'YES'
          ) INTO has_identity;

          SELECT EXISTS (
            SELECT 1
            FROM information_schema.columns
            WHERE table_schema='public' AND table_name='items' AND column_name='id'
              AND column_default IS NOT NULL
          ) INTO has_default;

          IF NOT has_identity AND NOT has_default THEN
            BEGIN
              ALTER TABLE public.items
                ALTER COLUMN id ADD GENERATED BY DEFAULT AS IDENTITY;
            EXCEPTION WHEN syntax_error_or_access_rule_violation THEN
              -- 老版 PG 无 identity：回退到序列 + 默认
              IF NOT EXISTS (
                SELECT 1 FROM pg_class c JOIN pg_namespace n ON n.oid=c.relnamespace
                WHERE c.relkind='S' AND c.relname='items_id_seq' AND n.nspname='public'
              ) THEN
                CREATE SEQUENCE public.items_id_seq;
                ALTER SEQUENCE public.items_id_seq OWNED BY public.items.id;
              END IF;
              ALTER TABLE public.items
                ALTER COLUMN id SET DEFAULT nextval('public.items_id_seq');
            END;
          END IF;
        END$$;
        """
    )


def downgrade() -> None:
    pass
