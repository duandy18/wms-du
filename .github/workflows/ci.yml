name: App CI - Lite

on:
  push:
    branches: [dev, main]
  pull_request:
    branches: [dev, main]
  workflow_dispatch:

concurrency:
  group: app-ci-${{ github.ref }}
  cancel-in-progress: true

jobs:
  ci-main:
    runs-on: ubuntu-latest
    timeout-minutes: 20
    env:
      DATABASE_URL: 'sqlite:///test.db'
      ENABLE_DIAG: '0'
      JWT_SECRET: 'test-ci-secret'

    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Setup Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.12'
          cache: 'pip'
          cache-dependency-path: |
            requirements.txt
            requirements-dev.txt

      - name: Install dependencies
        run: |
          python -m pip install -U pip
          if [ -f requirements.txt ]; then pip install -r requirements.txt; fi
          if [ -f requirements-dev.txt ]; then pip install -r requirements-dev.txt; fi
          # 修复：明确安装 psycopg2-binary，以确保数据库连接驱动在 CI 环境中可用。
          pip install psycopg2-binary

      - name: Cache pytest
        uses: actions/cache@v4
        with:
          path: .pytest_cache
          key: pytest-${{ runner.os }}-${{ hashFiles('requirements*.txt') }}

      - name: Lint & Typecheck
        run: |
          # 1. 运行 ruff Linter 检查，并忽略导入排序错误 I001 (isort 规则)。
          ruff check . --ignore I001

          # 2. 使用 ruff 格式化（自动修复格式）。Ruff 现在同时处理格式和导入排序。
          ruff format .

          # 3. 运行类型检查
          mypy .

      - name: Test (pytest)
        run: |
          pytest \
            --cov=app --cov-report=term-missing --cov-report=xml:coverage.xml \
            --junitxml=pytest-junit.xml \
            --cov-fail-under=65 -q --maxfail=1 --disable-warnings

      - name: Upload test artifacts on failure
        if: failure()
        uses: actions/upload-artifact@v4
        with:
          name: ci-artifacts
          path: |
            coverage.xml
            pytest-junit.xml
