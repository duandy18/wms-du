name: App CI - Lite (lean)

on:
  pull_request: { branches: [ main ] }
  push:         { branches: [ main ] }

concurrency:
  group: app-ci-${{ github.ref }}
  cancel-in-progress: true

jobs:
  full:
    name: Full (PG + pytest only)
    runs-on: ubuntu-latest
    timeout-minutes: 20

    services:
      postgres:
        image: postgres:14-alpine
        env:
          POSTGRES_USER: wms
          POSTGRES_PASSWORD: wms  # pragma: allowlist secret
          POSTGRES_DB: wms
        ports: [ "5432:5432" ]
        options: >-
          --health-cmd "pg_isready -U wms -d wms"
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.12"
          cache: "pip"

      - name: Install deps (editable)
        run: |
          python -m pip install -U pip
          # 只用项目声明的依赖，不再额外 pip install xxx
          pip install -e ".[pg,dev]"

      - name: Show versions (debug)
        run: |
          python -V
          pip freeze

      - name: Run tests (pytest only)
        env:
          DATABASE_URL: postgresql+psycopg://wms:wms@localhost:5432/wms  # pragma: allowlist secret
          JWT_SECRET: test-ci-secret  # pragma: allowlist secret
          ENABLE_DIAG: "0"
          # 若你的测试会读取 Alembic 的 SQLite 变量，清空它避免回退
          ALEMBIC_SQLITE_URL: ""
          # 可选：加载我们前面做的“CI 专用 pytest 插件”以稳住环境
          # 注：如果你尚未添加 tests/plugins/ci_pg_monkeypatch.py，可先不设这一行
          # PYTEST_ADDOPTS: "-p tests.plugins.ci_pg_monkeypatch"
        run: |
          # 如需迁移，取消下一行注释
          # alembic upgrade head
          pytest -q --maxfail=1 --disable-warnings
