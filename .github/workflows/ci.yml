name: App CI - Lite (lean)

on:
  pull_request: { branches: [ main ] }
  push:         { branches: [ main ] }

concurrency:
  group: app-ci-${{ github.ref }}
  cancel-in-progress: true

jobs:
  full:
    name: Full (PG + pytest only)
    runs-on: ubuntu-latest
    timeout-minutes: 20

    services:
      postgres:
        image: postgres:14-alpine
        env:
          POSTGRES_USER: wms
          POSTGRES_PASSWORD: wms  # pragma: allowlist secret
          POSTGRES_DB: wms
        ports: [ "5432:5432" ]
        options: >-
          --health-cmd "pg_isready -U wms -d wms"
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.12"
          cache: "pip"

      - name: Install deps (editable)
        run: |
          python -m pip install -U pip wheel
          pip install -e ".[pg,dev]"

      - name: Install runtime deps (temporary)
        run: |
          pip install "fastapi>=0.110" "uvicorn>=0.29" "pydantic-settings>=2.2" "APScheduler>=3.10" "aiosqlite>=0.20"

      - name: Verify runtime deps
        run: |
          python - <<'PY'
          import importlib, sys
          pkgs = ["fastapi","uvicorn","pydantic_settings","apscheduler","aiosqlite"]
          missing = [p for p in pkgs if importlib.util.find_spec(p) is None]
          print("PYTHON:", sys.version)
          print("MISSING:", missing)
          assert not missing, f"Missing packages: {missing}"
          PY

      - name: Run tests
        env:
          DATABASE_URL: postgresql+psycopg://wms:wms@localhost:5432/wms  # pragma: allowlist secret
          JWT_SECRET: test-ci-secret  # pragma: allowlist secret
          ENABLE_DIAG: "0"
          ALEMBIC_SQLITE_URL: ""
        run: |
          pytest -q --maxfail=1 --disable-warnings
