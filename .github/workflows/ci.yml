name: app-ci

on:
  push:
    branches: [dev, main, feat/**]
  pull_request:
    branches: [dev, main]

concurrency:
  group: app-ci-${{ github.ref }}
  cancel-in-progress: true

jobs:
  lint-type:
    runs-on: ubuntu-latest
    timeout-minutes: 15
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-python@v5
        with:
          python-version: "3.12"
          cache: "pip"
      - run: |
          python -m pip install -U pip
          pip install -r requirements.txt
          if [ -f requirements-dev.txt ]; then pip install -r requirements-dev.txt; fi
          ruff . && ruff format --check . && black --check . && isort --check-only .
          mypy .

  tests:
    name: tests (sqlite)
    runs-on: ubuntu-latest
    timeout-minutes: 20
    env:
      DATABASE_URL: sqlite:///test.db
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-python@v5
        with:
          python-version: "3.12"
          cache: "pip"
      - name: Install deps
        run: |
          python -m pip install -U pip
          pip install -r requirements.txt
          if [ -f requirements-dev.txt ]; then pip install -r requirements-dev.txt; fi
      - name: Prepare DB (alembic + seed)
        run: |
          alembic upgrade head
          python -m scripts.seed_rbac || true
      - name: Run tests
        run: |
          pytest -q --maxfail=1 --disable-warnings

  coverage-gate:
    needs: [tests]
    runs-on: ubuntu-latest
    timeout-minutes: 15
    env:
      DATABASE_URL: sqlite:///test.db
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-python@v5
        with:
          python-version: "3.12"
          cache: "pip"
      - run: |
          python -m pip install -U pip
          pip install -r requirements.txt
          if [ -f requirements-dev.txt ]; then pip install -r requirements-dev.txt; fi
          alembic upgrade head
          python -m scripts.seed_rbac || true
          pytest --cov=app --cov-report=term-missing --cov-fail-under=65

  migrate-check:
    # 只在 push 到 dev/main 时跑（feature 分支 / PR 全部跳过，不占红）
    if: ${{ github.event_name == 'push' && (github.ref_name == 'dev' || github.ref_name == 'main') }}
    runs-on: ubuntu-latest
    timeout-minutes: 15
    services:
      postgres:
        image: postgres:15
        env:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: ${{ secrets.CI_POSTGRES_PASSWORD }}
          POSTGRES_DB: wms
        ports: ["5432:5432"]
        options: >-
          --health-cmd "pg_isready -U postgres -d wms"
          --health-interval 10s --health-timeout 5s --health-retries 5
    env:
      PGHOST: 127.0.0.1
      PGPORT: "5432"
      PGUSER: postgres
      PGPASSWORD: ${{ secrets.CI_POSTGRES_PASSWORD }}
      PGDATABASE: wms
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-python@v5
        with:
          python-version: "3.12"
          cache: "pip"
      - run: |
        python -m pip install -U pip
        pip install -r requirements.txt
        if [ -f requirements-dev.txt ]; then pip install -r requirements-dev.txt; fi
        export DATABASE_URL="postgresql+psycopg://${PGUSER}:${PGPASSWORD}@${PGHOST}:${PGPORT}/${PGDATABASE}"
        alembic upgrade head
