name: WMS-DU CI (PG + pytest)

on:
  push:
    branches: [ "main", "feat/**", "chore/**" ]
  pull_request:
    branches: [ "main" ]

# CI ‰∏éÊú¨Âú∞‰øùÊåÅ‰∏ÄËá¥ÔºöÊúçÂä°ÂÆπÂô® 5432 ‚Üí ÂÆø‰∏ª 5433
env:
  PYTHONUNBUFFERED: "1"
  PYTHONPATH: "."
  DATABASE_URL: postgresql+psycopg://wms:wms@127.0.0.1:5433/wms

jobs:
  tests:
    name: Quick + Smoke on PostgreSQL
    runs-on: ubuntu-latest
    timeout-minutes: 35

    services:
      postgres:
        image: postgres:14-alpine
        env:
          POSTGRES_USER: wms
          POSTGRES_PASSWORD: wms
          POSTGRES_DB: wms
        ports: [ "5433:5432" ]
        options: >-
          --health-cmd "pg_isready -U wms"
          --health-interval 5s
          --health-timeout 5s
          --health-retries 30

    steps:
      - name: ‚¨áÔ∏è Checkout
        uses: actions/checkout@v4

      - name: üêç Setup Python 3.12
        uses: actions/setup-python@v5
        with:
          python-version: "3.12"

      - name: üì¶ Install system deps
        run: |
          sudo apt-get update
          sudo apt-get install -y --no-install-recommends postgresql-client build-essential

      - name: üì¶ Install Python deps
        run: |
          python -m pip install -U pip wheel setuptools
          # È°πÁõÆ‰æùËµñÔºàÊåâÂ≠òÂú®‰∏éÂê¶ÂÆâË£ÖÔºâ
          if [ -f requirements.txt ]; then pip install -r requirements.txt; fi
          if [ -f requirements-dev.txt ]; then pip install -r requirements-dev.txt; fi
          # Â¶Ç‰Ω†Âú® .github/ci/ ‰∏ãÁª¥Êä§‰∫ÜÁ≤æÁÆÄ‰æùËµñÔºå‰πü‰∏ÄËµ∑Ë£ÖÔºàÂèØÈÄâÔºâ
          if [ -f .github/ci/requirements-ci.txt ]; then pip install -r .github/ci/requirements-ci.txt; fi
          # ÂÖ≥ÈîÆÔºöCI ÊòæÂºèË°•ÈΩêÊï∞ÊçÆÂ∫ìÈ©±Âä®
          pip install "psycopg[binary]>=3.1" asyncpg
      - name: üîé Show env
        run: |
          python -V
          echo "DATABASE_URL=${DATABASE_URL}"

      - name: ‚è≥ Wait PostgreSQL ready
        env:
          PGPASSWORD: wms
        run: |
          echo "Waiting for Postgres on 127.0.0.1:5433 ..."
          for i in {1..60}; do
            pg_isready -h 127.0.0.1 -p 5433 && break
            sleep 2
          done
          psql "postgresql://wms:${PGPASSWORD}@127.0.0.1:5433/wms" -c 'select 1;'

      - name: üóÉ Alembic migrate (head ‚Üí heads fallback)
        run: |
          set +e
          alembic upgrade head
          rc=$?
          set -e
          if [ $rc -ne 0 ]; then
            echo "alembic upgrade head failed (maybe multiple heads). Trying 'alembic upgrade heads'..."
            alembic upgrade heads
          fi

      - name: ‚úÖ Run CI invariants (tests/ci)
        env:
          DATABASE_URL: ${{ env.DATABASE_URL }}
        run: |
          pytest -q tests/ci -s

      - name: üöÄ Run Quick tests (tests/quick)
        env:
          DATABASE_URL: ${{ env.DATABASE_URL }}
        run: |
          pytest -q tests/quick -s

      - name: üî• Run Smoke tests (tests/smoke)
        env:
          DATABASE_URL: ${{ env.DATABASE_URL }}
        run: |
          pytest -q tests/smoke -s
