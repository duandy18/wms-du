name: CI · Test & Trace

on:
  push:
    branches: [ main, dev, feat/** ]
  pull_request:
    branches: [ main, dev ]

jobs:
  test:
    runs-on: ubuntu-latest

    services:
      postgres:
        image: postgres:14-alpine
        env:
          POSTGRES_USER: wms
          POSTGRES_PASSWORD: wms
          POSTGRES_DB: wms
        ports:
          - 5433:5432
        options: >-
          --health-cmd "pg_isready -U wms -d wms"
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

      otel-collector:
        image: otel/opentelemetry-collector:0.113.0
        # ★ 关键：挂目录到 /etc/otelcol，镜像会自动读取 /etc/otelcol/config.yaml
        volumes:
          - ./monitoring/otelcol:/etc/otelcol:ro
        ports:
          - 4317:4317
          - 4318:4318
        options: >-
          --health-cmd "wget -qO- http://localhost:8888/metrics || exit 1"
          --health-interval 10s --health-timeout 5s --health-retries 5

      jaeger:
        image: jaegertracing/all-in-one:1.59
        env:
          COLLECTOR_OTLP_ENABLED: "true"
          COLLECTOR_OTLP_GRPC_HOST_PORT: ":4317"
          COLLECTOR_OTLP_HTTP_HOST_PORT: ":4318"
        ports:
          - 16686:16686
          - 4317:4317
          - 4318:4318

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.12"

      - name: Install deps
        run: |
          python -m venv .venv
          source .venv/bin/activate
          pip install -U pip setuptools wheel
          pip install -r requirements.txt
          pip install -e ".[pg,dev,otel]"

      - name: Wait for services
        run: |
          echo "Waiting for Postgres & OTel Collector..."
          sleep 10

      - name: Run pytest (smoke + quick)
        env:
          DATABASE_URL: postgresql+psycopg://wms:wms@127.0.0.1:5433/wms
          OTEL_SERVICE_NAME: wms-du-ci
          OTEL_EXPORTER_OTLP_ENDPOINT: http://localhost:4317
          OTEL_TRACES_SAMPLER: always_on
        run: |
          source .venv/bin/activate
          pytest -q -s
